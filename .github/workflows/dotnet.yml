# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: dotnet-CI

# Trigger the action on push to master
on:
  push:
    branches:
      - master
  
# Sets permissions of the GITHUB_TOKEN to allow reading packages
permissions:
  packages: read

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NuGetDirectory: ${{ github.workspace}}/nuget

defaults:
  run:
    shell: pwsh

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "ci"
  cancel-in-progress: false

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
    # Setup environment
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Setup Dotnet
      uses: actions/setup-dotnet@v4
      with:
        source-url: https://nuget.pkg.github.com/MonkeyModdingTroop/index.json
      
    # Cache NuGet packages
    - uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget
          
    # Build and test projects
    - name: Restore
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    - name: Test
      run: dotnet test --no-restore --no-build
      
    # Publish the NuGet package(s) as an artifact, so they can be used in the following jobs
    - uses: actions/upload-artifact@v3
      with:
        name: nuget
        if-no-files-found: error
        retention-days: 7
        path: ./**/*.nupkg
        
  Validate-NuGet:
    runs-on: ubuntu-latest
    needs: [ Build ]
    steps:
    # Install the .NET SDK indicated in the global.json file
    - name: Setup Dotnet
      uses: actions/setup-dotnet@v4

    # Cache NuGet packages
    - uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget

    - name: Install NuGet Validator
      run: dotnet tool update Meziantou.Framework.NuGetPackageValidation.Tool --global
          
    # Download the NuGet package created in the previous job
    - uses: actions/download-artifact@v3
      with:
        name: nuget
        path: ${{ env.NuGetDirectory }}

    # Validate metadata and content of the NuGet package
    # https://www.nuget.org/packages/Meziantou.Framework.NuGetPackageValidation.Tool#readme-body-tab
    # If some rules are not applicable, you can disable them
    # using the --excluded-rules or --excluded-rule-ids option
    - name: Validate Package(s)
      run: meziantou.validate-nuget-package (Get-ChildItem "${{ env.NuGetDirectory }}/*.nupkg")